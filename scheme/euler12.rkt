;; Problem 12 - Highly divisible triangular number
;;
;; The sequence of triangle numbers is generated by adding the natural
;; numbers. So the 7th triangle number would be
;; 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
;; The first ten terms would be:  1, 3, 6, 10, 15, 21, 28, 36,45, 55, ...
;;
;; Let us list the factors of the first seven triangle numbers:
;;     1:  1
;;     3:  1,3
;;     6:  1,2,3,6
;;     10: 1,2,5,10
;;     15: 1,3,5,15
;;     21: 1,3,7,21
;;     28: 1,2,4,7,14,28
;;
;; We can see that 28 is the first triangle number to have over five
;; divisors.
;;
;; What is the value of the first triangle number to have over five
;; hundred divisors?

#lang racket
(require math/number-theory
         "util.rkt")

(module+ test
  (require rackunit))

(define (nth-triangle n)
  (if (= n 1)
      1
      (+ n (nth-triangle (- n 1)))))

(module+ test
  (check-equal? (nth-triangle 1) 1)
  (check-equal? (nth-triangle 2) 3)
  (check-equal? (nth-triangle 3) 6)
  (check-equal? (nth-triangle 4) 10)
  (check-equal? (nth-triangle 5) 15)
  (check-equal? (nth-triangle 6) 21)
  (check-equal? (nth-triangle 7) 28))

(define (divisors-greater-than n)
  (位(x) (> (length (divisors x)) n)))

(module+ test
  (check-true  ((divisors-greater-than 5) (nth-triangle 7)))
  (check-false ((divisors-greater-than 5) (nth-triangle 6))))

(define triangles
  (letrec ([f (位(x) (stream-cons (nth-triangle x) (f (+ 1 x))))])
    (f 1)))

(module+ test
  (check-equal? (stream-first triangles) 1)
  (check-equal? (stream-first (stream-rest triangles)) 3)
  (check-equal? (stream-first (stream-rest (stream-rest triangles))) 6))

(define (stream-drop-while f xs)
  (let ([x (stream-first xs)])
    (if (f x)
        (stream-drop-while f (stream-rest xs))
        xs)))

(module+ test
  (check-equal? (stream-first (stream-drop-while (位(x) (< x 10)) triangles)) 10))

(define (drop-divisors-less-than n xs)
  (stream-drop-while (位(x) (not ((divisors-greater-than n) x))) xs))

(module+ test
  (check-equal? (stream-first (drop-divisors-less-than 5 triangles)) 28))

(module+ main
  (let ([answer
         (stream-first (drop-divisors-less-than 500 triangles))])
    (printf "~a ~a\n"
            "Problem 12: The first triangle number to have over 500 divisors is"
            answer)))
