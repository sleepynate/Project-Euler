;; Project Euler Problem 2
;; Solution by nathan dotz - nathan (period) dotz (at sign) gmail (period) com
;;
;; Each new term in the Fibonacci sequence is generated by adding
;; the previous two terms. By starting with 1 and 2, the first
;; 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; Find the sum of all the even-valued terms in the sequence
;; which do not exceed four million.
;;

#lang racket

(provide fib evens answer-02)

(require "util.rkt")

(define (fib n)
  (define (fib-worker n stack)
    (if (<= n (car stack))
        stack
        (let* ([fst (first stack)]
               [snd (second stack)]
               [new-top (+ fst snd)])
          (fib-worker n (cons new-top stack)))))
  (if (< n 1)
      '()
      (fib-worker n '(1 1)))
  )

(define (evens lst)
  (filter even? lst))

(define (answer-02)
  (sum (evens (fib 4000000))))

(module+ main
  (printf "~a ~a ~a~n"
          "Problem 2: The sum of all even-valued terms in the Fibonacci"
          "sequence less than four million is"
          (answer-02)))

(module+ test
  (require rackunit)
  (check-equal? (fib 0) '() "There are no fibonacci numbers below 1")
  (check-equal? (fib 1) '(1 1) "Fibonacci numbers <= 1 is '(1 1)")
  (check-equal? (fib 5) '(5 3 2 1 1) "Fibonacci numbers <= to 5 is '(5 3 2 1 1)")

  (check-equal? (evens '(1 2 3 4)) '(2 4) "evens of 1 through 4 is '(2 4)"))
