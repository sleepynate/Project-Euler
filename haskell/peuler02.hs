{-
 - Project Euler Problem 2
 - Solution by nathan dotz - nathan (period) dotz (at sign) gmail (period) com
 -
 - Each new term in the Fibonacci sequence is generated by adding
 - the previous two terms. By starting with 1 and 2, the first
 - 10 terms will be:
 - 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 - 
 - Find the sum of all the even-valued terms in the sequence
 - which do not exceed four million.
 -}

fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

main = putStrLn $ 
   "Sum of all even valued fibonacci numbers below 4 Million is: " ++ 
   show ( sum [ fibs!!n | n <- [1..50]
      ,((fibs!!n) `mod` 2) == 0
      , fibs!!n < 4000000 ] )

-- pokey suggested: sum $ takeWhile (< 4000000) $ filter ((== 0) . ((flip mod) 2)) fibs
